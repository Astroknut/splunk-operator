# Splunk image
image:
  repository: docker.io/splunk/splunk:edge

kubeRbacProxy:
  image: 
    repository: gcr.io/kubebuilder/kube-rbac-proxy
    pullPolicy: IfNotPresent
    tag: "v0.11.0"

# Operator that manages splunk resources
splunkOperator: 

  # Deploy operator
  enabled: true

  # Splunk operator image
  image:
    repository: docker.io/splunk/splunk-operator:latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []

  nameOverride: ""

  fullnameOverride: ""

  # Give operator cluster-wide access, otherwise access is limited to operator namespace
  clusterWideAccess: true

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  containerSecurityContext:
    allowPrivilegeEscalation: false

  securityContext:
    runAsUser: 1001
    fsGroup: 1001
    runAsNonRoot: true

  hostNetwork: false
  hostPID: false
  hostIPC: false

  service:
    type: ClusterIP
    port: 80

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    limits:
      cpu: 200m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 20Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}